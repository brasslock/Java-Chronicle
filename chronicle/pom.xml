<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013 Peter Lawrey
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~         http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.openhft</groupId>
        <artifactId>java-parent-pom</artifactId>
        <version>1.1.0</version>
        <relativePath />
    </parent>

    <artifactId>chronicle</artifactId>
    <version>3.2.0-diagnostics-8a6690e9</version>
    <packaging>bundle</packaging>

    <name>OpenHTF/Java-Chronicle/chronicle</name>
    <description>Java library for persisted low latency messaging (Java 6+)</description>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>net.openhft</groupId>
                <artifactId>third-party-bom</artifactId>
                <type>pom</type>
                <version>3.4.0</version>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>net.openhft</groupId>
                <artifactId>lang</artifactId>
                <version>6.4.5-SNAPSHOT</version>
            </dependency>
            <dependency>
                <groupId>net.openhft</groupId>
                <artifactId>affinity</artifactId>
                <version>2.1.1-SNAPSHOT</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>

        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>lang</artifactId>
        </dependency>

        <dependency>
            <groupId>net.openhft</groupId>
            <artifactId>affinity</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- for testing -->
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- on linux install with sudo apt-get install libjna-java -->
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>platform</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>net.sf.trove4j</groupId>
            <artifactId>trove4j</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.groupId}.${project.artifactId}
                        </Bundle-SymbolicName>
                        <Bundle-Name>${project.artifactId}</Bundle-Name>
                        <Export-Package>net.openhft.chronicle.*</Export-Package>
                    </instructions>
                </configuration>
                <executions>
                    <!--
                      This execution makes sure that the manifest is available
                      when the tests are executed
                    -->
                    <execution>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!-- todo remove once next parent pom is adopted -->
    <!-- If you're not quite yet ready to release the artifacts and do not want the artifacts to
    sync to Maven Central, you could reference the staging repository. After successfully deploying
    the artifacts to maven.java.net, you need to first close the repository so artifacts are moved
    to the staging repository. See instructions here to close artifacts to the staging repository.
    After closing the repository, the artifacts will be available in
    https://maven.java.net/content/repositories/staging/. You could set this URL in the repository
    element in $MAVEN_HOME/.m2/settings.xml to test the artifact before closing the artifacts to the
     release repository. See option 1 above for specifying the repository in settings.xml file.
     If you don't want to release the artifact to Maven Central, you could drop the artifacts in
     the staging repository and redeploy. See instructions here to drop artifacts in the staging
      repository. Keep in mind that once the artifact is released and sync'd to Maven Central,
      you cannot redeploy the same version again. The staging repository is very helpful when you
      want to test the promoted artifacts before actually releasing to Maven Central. -->
    <repositories>
        <repository>
            <id>sonatype-nexus-staging</id>
            <url>https://oss.sonatype.org/content/repositories/staging</url>
            <releases>
                <enabled>true</enabled>
            </releases>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>cxense_deploy</id>
            <name>Cxense repository</name>
            <url>http://localhost:9901/nexus/content/repositories/releases</url>
        </repository>
    </distributionManagement>

    <scm>
        <url>scm:git:git@github.com:OpenHFT/Java-Chronicle.git</url>
        <connection>scm:git:git@github.com:OpenHFT/Java-Chronicle.git</connection>
        <developerConnection>scm:git:git@github.com:OpenHFT/Java-Chronicle.git</developerConnection>
        <tag>master</tag>
    </scm>

</project>
